version: 2
jobs:
  build: &shared-config
    docker:
      - image: circleci/node:lts-fermium
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}-v1
            - dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}-v1
  lint:
    <<: *shared-config
    steps:
      - checkout
      - restore_cache:
          key: dependencies-{{ checksum "package.json" }}-v1
      - run: yarn lint
      - run: yarn format:check

  back-test-unit:
    <<: *shared-config
    steps:
      - checkout
      - restore_cache:
          key: dependencies-{{ checksum "package.json" }}-v1
      - run:
          command: yarn test
          environment:
            DATABASE_URL: postgres://$PG_USER:$PG_PWD@$PG_HOST:5432/$PG_DB

  back-test-e2e:
    docker:
      - image: circleci/node:lts-fermium
      - image: circleci/postgres:9.6.5
        environment:
          POSTGRES_DB: $PG_DB
          POSTGRES_USER: $PG_USER
          POSTGRES_PASSWORD: $PG_PWD
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          key: dependencies-{{ checksum "package.json" }}-v1
      - run:
          command: yarn test:e2e
          environment:
            DATABASE_URL: postgres://$PG_USER:$PG_PWD@$PG_HOST:5432/$PG_DB
  docker-build-and-push:
    working_directory: /dockerapp
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - deploy:
          name: Publish application to docker hub
          command: |
            docker login -e $DOCKER_HUB_EMAIL -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
            docker tag app $DOCKERHUB_USERNAME/$DOCKERHUB_APP_NAME:$CIRCLE_BUILD_NUM
            docker tag app $DOCKERHUB_USERNAME/$DOCKERHUB_APP_NAME:latest
            docker push $DOCKERHUB_USERNAME/$DOCKERHUB_APP_NAME:$CIRCLE_BUILD_NUM
            docker push $DOCKERHUB_USERNAME/$DOCKERHUB_APP_NAME:latest

  back-deploy-heroku:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Heroku Deploy
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:main
      - run:
          name: Smoke Test
          command: |
            HTTPCODE=`curl -s -o /dev/null -w "%{http_code}" https://$HEROKU_APP_NAME.herokuapp.com/`
              if [ "$HTTPCODE" -ne 200 ];then
                echo "heroku app not responding, failing deploy"
                exit 1
              fi


workflows:
  version: 2
  build-test-and-lint:
    jobs:
      - build
      - back-test-unit:
          requires:
            - build
      - back-test-e2e:
          requires:
            - build
      - lint:
          requires:
            - build
      - docker-build-and-push:
          requires:
            - build
            - lint
            - back-test-e2e
            - back-test-unit
          filters:
            branches:
              only: main
      - back-deploy-heroku:
          requires:
            - build
            - lint
            - back-test-e2e
            - back-test-unit
          filters:
            branches:
              only: main
      - server-doc-build:
          requires:
            - build
            - lint
            - back-test-e2e
            - back-test-unit
          filters:
            branches:
              only: main
